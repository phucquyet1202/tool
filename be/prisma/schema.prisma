// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = ""
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  PENDING
  PAID
  FAILED
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  name       String?
  role       Role      @default(USER)
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  status_yt  Boolean   @default(false) // Trạng thái tài khoản Youtube
  status_fb  Boolean   @default(false) // Trạng thái tài khoản Facebook
  status_tt  Boolean   @default(false) // Trạng thái tài khoản Tiktok
  // Quan hệ
  orders     Order[]
  histories  History[]
}

model Order {
  id                  String               @id @default(uuid())
  user_id             String
  amount              Int // Số tiền nạp (VND)
  days                Int // Số ngày được gia hạn
  paid                Boolean              @default(false)
  start_date          DateTime
  end_date            DateTime
  created_at          DateTime             @default(now())
  updated_at          DateTime             @updatedAt
  user                User                 @relation(fields: [user_id], references: [id])
  paymentTransactions PaymentTransaction[]
}

model History {
  id         String   @id @default(uuid())
  user_id    String
  action     String // Mô tả hành động, ví dụ: "Chạy tool ABC", "Stop tool"
  detail     String? // Chi tiết thêm nếu có
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [user_id], references: [id])
}

model PaymentTransaction {
  id             String   @id @default(uuid())
  order_id       String
  amount         Int
  status         Status // PAID, FAILED
  transaction_id String? // Mã giao dịch (nếu có từ PayOS)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  order Order @relation(fields: [order_id], references: [id])
}
